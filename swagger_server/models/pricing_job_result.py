# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.pricing_data import PricingData  # noqa: F401,E501
from swagger_server import util


class PricingJobResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, job_id: str=None, status: str=None, date_done: datetime=None, result: PricingData=None, error: str=None, traceback: str=None):  # noqa: E501
        """PricingJobResult - a model defined in Swagger

        :param job_id: The job_id of this PricingJobResult.  # noqa: E501
        :type job_id: str
        :param status: The status of this PricingJobResult.  # noqa: E501
        :type status: str
        :param date_done: The date_done of this PricingJobResult.  # noqa: E501
        :type date_done: datetime
        :param result: The result of this PricingJobResult.  # noqa: E501
        :type result: PricingData
        :param error: The error of this PricingJobResult.  # noqa: E501
        :type error: str
        :param traceback: The traceback of this PricingJobResult.  # noqa: E501
        :type traceback: str
        """
        self.swagger_types = {
            'job_id': str,
            'status': str,
            'date_done': datetime,
            'result': PricingData,
            'error': str,
            'traceback': str
        }

        self.attribute_map = {
            'job_id': 'job_id',
            'status': 'status',
            'date_done': 'date_done',
            'result': 'result',
            'error': 'error',
            'traceback': 'traceback'
        }
        self._job_id = job_id
        self._status = status
        self._date_done = date_done
        self._result = result
        self._error = error
        self._traceback = traceback

    @classmethod
    def from_dict(cls, dikt) -> 'PricingJobResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PricingJobResult of this PricingJobResult.  # noqa: E501
        :rtype: PricingJobResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self) -> str:
        """Gets the job_id of this PricingJobResult.


        :return: The job_id of this PricingJobResult.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: str):
        """Sets the job_id of this PricingJobResult.


        :param job_id: The job_id of this PricingJobResult.
        :type job_id: str
        """
        if job_id is None:
            raise ValueError("Invalid value for `job_id`, must not be `None`")  # noqa: E501

        self._job_id = job_id

    @property
    def status(self) -> str:
        """Gets the status of this PricingJobResult.


        :return: The status of this PricingJobResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this PricingJobResult.


        :param status: The status of this PricingJobResult.
        :type status: str
        """
        allowed_values = ["PENDING", "SUCCESS", "FAILURE"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def date_done(self) -> datetime:
        """Gets the date_done of this PricingJobResult.


        :return: The date_done of this PricingJobResult.
        :rtype: datetime
        """
        return self._date_done

    @date_done.setter
    def date_done(self, date_done: datetime):
        """Sets the date_done of this PricingJobResult.


        :param date_done: The date_done of this PricingJobResult.
        :type date_done: datetime
        """

        self._date_done = date_done

    @property
    def result(self) -> PricingData:
        """Gets the result of this PricingJobResult.


        :return: The result of this PricingJobResult.
        :rtype: PricingData
        """
        return self._result

    @result.setter
    def result(self, result: PricingData):
        """Sets the result of this PricingJobResult.


        :param result: The result of this PricingJobResult.
        :type result: PricingData
        """

        self._result = result

    @property
    def error(self) -> str:
        """Gets the error of this PricingJobResult.


        :return: The error of this PricingJobResult.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this PricingJobResult.


        :param error: The error of this PricingJobResult.
        :type error: str
        """

        self._error = error

    @property
    def traceback(self) -> str:
        """Gets the traceback of this PricingJobResult.


        :return: The traceback of this PricingJobResult.
        :rtype: str
        """
        return self._traceback

    @traceback.setter
    def traceback(self, traceback: str):
        """Sets the traceback of this PricingJobResult.


        :param traceback: The traceback of this PricingJobResult.
        :type traceback: str
        """

        self._traceback = traceback
